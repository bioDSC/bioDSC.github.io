PESCA_scores <- readRDS("/data/groups/bda/SPARCED/sparced/PESCA_results/PESCA_scores.RDS")
View(PESCA_scores)
dim(PESCA_scores)
colSums(PESCA_scores)
dim(PESCA_scores^2)
colSums(PESCA_scores^2)
PESCA_loadings <- readRDS("/data/groups/bda/SPARCED/sparced/PESCA_results/PESCA_loadings.RDS")
colSums(PESCA_loadings^2)
sum(colSums(PESCA_loadings^2))
plot(PESCA_loadings[:,1])
plot(PESCA_loadings[,1])
plot(PESCA_loadings[,2])
plot(PESCA_loadings[,3])
plot(PESCA_loadings[,4])
plot(PESCA_loadings[,5])
plot(PESCA_loadings[,6])
plot(PESCA_loadings[,7])
plot(PESCA_loadings[,8])
plot(PESCA_loadings[,9])
plot(PESCA_loadings[,10])
install.packages("igraph")
library(igraph)
set.seed(10)
data <- matrix(sample(0:2, 25, replace=TRUE), nrow=5)
colnames(data) = rownames(data) = LETTERS[1:5]
# build the graph object
network <- graph_from_adjacency_matrix(data)
# plot it
plot(network)
data
data[0,0]
data[1.1]
data[1,1
]
data[1,1]=1
network <- graph_from_adjacency_matrix(data)
# plot it
plot(network)
data <- matrix(sample(0, 25, replace=TRUE), nrow=5)
colnames(data) = rownames(data) = LETTERS[1:5]
# build the graph object
network <- graph_from_adjacency_matrix(data)
# plot it
plot(network)
data[1,1]=1
network <- graph_from_adjacency_matrix(data)
# plot it
plot(network)
data[1,1]=2
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,2]=2
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,1]=0
data[1,2]=2
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,2]=-1
network <- graph_from_adjacency_matrix(data)
plot(network)
data[2,1]=1
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,1]=0
data[2,1]=1
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,2]=0
data[1,1]=0
data[2,1]=1
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,2]=1
data[1,2]=0
data[1,1]=0
data[2,1]=1
data[1,2]=1
network <- graph_from_adjacency_matrix(data)
plot(network)
data[1,2]=2
network <- graph_from_adjacency_matrix(data)
plot(network)
tbl = read.csv("/home/frans/OneDrive/Projects/Groups/BacterialCellBiology_And_Physiology/Leendert/BFS/workdata.csv")
tbl
View(tbl)
ncol(tbl)
ncol(tbl[-2])
vals <- unlist(tbl[-ncol(tbl)])
vals
table(factor(rep(tbl$source, ncol(tbl) - 1), levels = unique(vals)), vals)
cm = table(factor(rep(tbl$source, ncol(tbl) - 1), levels = unique(vals)), vals)
View(cm)
dim(cm)
network <- graph_from_adjacency_matrix(cm)
plot(network)
tbl
tbl[-2]
install.packages(c("sandpaper", "varnish", "pegboard"))
RV <- getRversion()
OS <- paste(RV, R.version["platform"], R.version["arch"], R.version["os"])
codename <- sub("Codename.\t", "", system2("lsb_release", "-c", stdout = TRUE))
RV <- getRversion()
OS <- paste(RV, R.version["platform"], R.version["arch"], R.version["os"])
codename <- sub("Codename.\t", "", system2("lsb_release", "-c", stdout = TRUE))
RV
OS <- paste(RV, R.version["platform"], R.version["arch"], R.version["os"])
OS
codename <- sub("Codename.\t", "", system2("lsb_release", "-c", stdout = TRUE))
rmarkdown::pandoc_version()
install.packages("sandpaper")
version()
version
options(repos = c(
carpentries = "https://carpentries.r-universe.dev/",
CRAN = "https://cran.rstudio.com/"
))
install.packages("sandpaper", dep = TRUE)
install.packages("pegboard")
install.packages("tinkr")
install.packages("xslt")
install.packages("xslt")
options(repos = c(
carpentries = "https://carpentries.r-universe.dev/",
CRAN = "https://cran.rstudio.com/"
))
install.packages("sandpaper", dep = TRUE)
library(sandpaper)
#library(sandpaper)
rmarkdown::pandoc_version()
tmp<-tempfile()
sandpaper::no_package_cache()
sandpaper::create_lesson(tmp,open=FALSE)
sandpaper::build_lesson(tmp,preview=FALSE,quiet=TRUE)
fs::dir_tree(tmp,recurse=1)
pwd()
cwd()
wd()
getwd(
)
cd /tmp
tmp
tmp<-"/data/groups/bioDSC/teaching/python-novice-gapminder"
usethis::create_from_github(
repo = "swcarpentry/python-novice-gapminder",
destdir = "/data/groups/bioDSC/teaching/python-novice-gampinder",
fork = TRUE
)
usethis::create_from_github(
repo = "swcarpentry/python-novice-gapminder",
destdir = "/data/groups/bioDSC/teaching",
fork = TRUE
)
usethis::create_from_github(
repo = "swcarpentry/python-novice-gapminder",
destdir = "/data/groups/bioDSC/teaching",
fork = TRUE
)
setwd("~/")
pwd
getwd()
setwd("~/Development/bioDSC/bioDSC.github.io")
install.packages("tidyverse")
install.packages("palmerpenguins")
#| label: load-packages
#| include: false
library(tidyverse)
library(palmerpenguins)
#| label: plot-penguins
#| warning: false
#| echo: false
ggplot(penguins,
aes(x = flipper_length_mm, y = bill_length_mm)) +
geom_point(aes(color = species, shape = species)) +
scale_color_manual(values = c("darkorange","purple","cyan4")) +
labs(
title = "Flipper and bill length",
subtitle = "Dimensions for penguins at Palmer Station LTER",
x = "Flipper length (mm)", y = "Bill length (mm)",
color = "Penguin species", shape = "Penguin species"
) +
theme_minimal()
